// Code generated by ent, DO NOT EDIT.

package ginlog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"go.dtapp.net/golog/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldID, id))
}

// RequestTime applies equality check predicate on the "request_time" field. It's identical to RequestTimeEQ.
func RequestTime(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestTime, v))
}

// RequestHost applies equality check predicate on the "request_host" field. It's identical to RequestHostEQ.
func RequestHost(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestHost, v))
}

// RequestPath applies equality check predicate on the "request_path" field. It's identical to RequestPathEQ.
func RequestPath(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestPath, v))
}

// RequestQuery applies equality check predicate on the "request_query" field. It's identical to RequestQueryEQ.
func RequestQuery(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestQuery, v))
}

// RequestMethod applies equality check predicate on the "request_method" field. It's identical to RequestMethodEQ.
func RequestMethod(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestMethod, v))
}

// RequestScheme applies equality check predicate on the "request_scheme" field. It's identical to RequestSchemeEQ.
func RequestScheme(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestScheme, v))
}

// RequestContentType applies equality check predicate on the "request_content_type" field. It's identical to RequestContentTypeEQ.
func RequestContentType(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestContentType, v))
}

// RequestBody applies equality check predicate on the "request_body" field. It's identical to RequestBodyEQ.
func RequestBody(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestBody, v))
}

// RequestClientIP applies equality check predicate on the "request_client_ip" field. It's identical to RequestClientIPEQ.
func RequestClientIP(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestClientIP, v))
}

// RequestUserAgent applies equality check predicate on the "request_user_agent" field. It's identical to RequestUserAgentEQ.
func RequestUserAgent(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestUserAgent, v))
}

// RequestHeader applies equality check predicate on the "request_header" field. It's identical to RequestHeaderEQ.
func RequestHeader(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestHeader, v))
}

// RequestCostTime applies equality check predicate on the "request_cost_time" field. It's identical to RequestCostTimeEQ.
func RequestCostTime(v int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestCostTime, v))
}

// ResponseTime applies equality check predicate on the "response_time" field. It's identical to ResponseTimeEQ.
func ResponseTime(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseTime, v))
}

// ResponseHeader applies equality check predicate on the "response_header" field. It's identical to ResponseHeaderEQ.
func ResponseHeader(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseHeader, v))
}

// ResponseStatusCode applies equality check predicate on the "response_status_code" field. It's identical to ResponseStatusCodeEQ.
func ResponseStatusCode(v int) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseStatusCode, v))
}

// ResponseData applies equality check predicate on the "response_data" field. It's identical to ResponseDataEQ.
func ResponseData(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseData, v))
}

// GoVersion applies equality check predicate on the "go_version" field. It's identical to GoVersionEQ.
func GoVersion(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldGoVersion, v))
}

// SdkVersion applies equality check predicate on the "sdk_version" field. It's identical to SdkVersionEQ.
func SdkVersion(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldSdkVersion, v))
}

// SystemInfo applies equality check predicate on the "system_info" field. It's identical to SystemInfoEQ.
func SystemInfo(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldSystemInfo, v))
}

// RequestTimeEQ applies the EQ predicate on the "request_time" field.
func RequestTimeEQ(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestTime, v))
}

// RequestTimeNEQ applies the NEQ predicate on the "request_time" field.
func RequestTimeNEQ(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestTime, v))
}

// RequestTimeIn applies the In predicate on the "request_time" field.
func RequestTimeIn(vs ...time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestTime, vs...))
}

// RequestTimeNotIn applies the NotIn predicate on the "request_time" field.
func RequestTimeNotIn(vs ...time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestTime, vs...))
}

// RequestTimeGT applies the GT predicate on the "request_time" field.
func RequestTimeGT(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestTime, v))
}

// RequestTimeGTE applies the GTE predicate on the "request_time" field.
func RequestTimeGTE(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestTime, v))
}

// RequestTimeLT applies the LT predicate on the "request_time" field.
func RequestTimeLT(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestTime, v))
}

// RequestTimeLTE applies the LTE predicate on the "request_time" field.
func RequestTimeLTE(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestTime, v))
}

// RequestTimeIsNil applies the IsNil predicate on the "request_time" field.
func RequestTimeIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestTime))
}

// RequestTimeNotNil applies the NotNil predicate on the "request_time" field.
func RequestTimeNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestTime))
}

// RequestHostEQ applies the EQ predicate on the "request_host" field.
func RequestHostEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestHost, v))
}

// RequestHostNEQ applies the NEQ predicate on the "request_host" field.
func RequestHostNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestHost, v))
}

// RequestHostIn applies the In predicate on the "request_host" field.
func RequestHostIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestHost, vs...))
}

// RequestHostNotIn applies the NotIn predicate on the "request_host" field.
func RequestHostNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestHost, vs...))
}

// RequestHostGT applies the GT predicate on the "request_host" field.
func RequestHostGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestHost, v))
}

// RequestHostGTE applies the GTE predicate on the "request_host" field.
func RequestHostGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestHost, v))
}

// RequestHostLT applies the LT predicate on the "request_host" field.
func RequestHostLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestHost, v))
}

// RequestHostLTE applies the LTE predicate on the "request_host" field.
func RequestHostLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestHost, v))
}

// RequestHostContains applies the Contains predicate on the "request_host" field.
func RequestHostContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestHost, v))
}

// RequestHostHasPrefix applies the HasPrefix predicate on the "request_host" field.
func RequestHostHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestHost, v))
}

// RequestHostHasSuffix applies the HasSuffix predicate on the "request_host" field.
func RequestHostHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestHost, v))
}

// RequestHostIsNil applies the IsNil predicate on the "request_host" field.
func RequestHostIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestHost))
}

// RequestHostNotNil applies the NotNil predicate on the "request_host" field.
func RequestHostNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestHost))
}

// RequestHostEqualFold applies the EqualFold predicate on the "request_host" field.
func RequestHostEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestHost, v))
}

// RequestHostContainsFold applies the ContainsFold predicate on the "request_host" field.
func RequestHostContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestHost, v))
}

// RequestPathEQ applies the EQ predicate on the "request_path" field.
func RequestPathEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestPath, v))
}

// RequestPathNEQ applies the NEQ predicate on the "request_path" field.
func RequestPathNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestPath, v))
}

// RequestPathIn applies the In predicate on the "request_path" field.
func RequestPathIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestPath, vs...))
}

// RequestPathNotIn applies the NotIn predicate on the "request_path" field.
func RequestPathNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestPath, vs...))
}

// RequestPathGT applies the GT predicate on the "request_path" field.
func RequestPathGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestPath, v))
}

// RequestPathGTE applies the GTE predicate on the "request_path" field.
func RequestPathGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestPath, v))
}

// RequestPathLT applies the LT predicate on the "request_path" field.
func RequestPathLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestPath, v))
}

// RequestPathLTE applies the LTE predicate on the "request_path" field.
func RequestPathLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestPath, v))
}

// RequestPathContains applies the Contains predicate on the "request_path" field.
func RequestPathContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestPath, v))
}

// RequestPathHasPrefix applies the HasPrefix predicate on the "request_path" field.
func RequestPathHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestPath, v))
}

// RequestPathHasSuffix applies the HasSuffix predicate on the "request_path" field.
func RequestPathHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestPath, v))
}

// RequestPathIsNil applies the IsNil predicate on the "request_path" field.
func RequestPathIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestPath))
}

// RequestPathNotNil applies the NotNil predicate on the "request_path" field.
func RequestPathNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestPath))
}

// RequestPathEqualFold applies the EqualFold predicate on the "request_path" field.
func RequestPathEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestPath, v))
}

// RequestPathContainsFold applies the ContainsFold predicate on the "request_path" field.
func RequestPathContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestPath, v))
}

// RequestQueryEQ applies the EQ predicate on the "request_query" field.
func RequestQueryEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestQuery, v))
}

// RequestQueryNEQ applies the NEQ predicate on the "request_query" field.
func RequestQueryNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestQuery, v))
}

// RequestQueryIn applies the In predicate on the "request_query" field.
func RequestQueryIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestQuery, vs...))
}

// RequestQueryNotIn applies the NotIn predicate on the "request_query" field.
func RequestQueryNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestQuery, vs...))
}

// RequestQueryGT applies the GT predicate on the "request_query" field.
func RequestQueryGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestQuery, v))
}

// RequestQueryGTE applies the GTE predicate on the "request_query" field.
func RequestQueryGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestQuery, v))
}

// RequestQueryLT applies the LT predicate on the "request_query" field.
func RequestQueryLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestQuery, v))
}

// RequestQueryLTE applies the LTE predicate on the "request_query" field.
func RequestQueryLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestQuery, v))
}

// RequestQueryContains applies the Contains predicate on the "request_query" field.
func RequestQueryContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestQuery, v))
}

// RequestQueryHasPrefix applies the HasPrefix predicate on the "request_query" field.
func RequestQueryHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestQuery, v))
}

// RequestQueryHasSuffix applies the HasSuffix predicate on the "request_query" field.
func RequestQueryHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestQuery, v))
}

// RequestQueryIsNil applies the IsNil predicate on the "request_query" field.
func RequestQueryIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestQuery))
}

// RequestQueryNotNil applies the NotNil predicate on the "request_query" field.
func RequestQueryNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestQuery))
}

// RequestQueryEqualFold applies the EqualFold predicate on the "request_query" field.
func RequestQueryEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestQuery, v))
}

// RequestQueryContainsFold applies the ContainsFold predicate on the "request_query" field.
func RequestQueryContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestQuery, v))
}

// RequestMethodEQ applies the EQ predicate on the "request_method" field.
func RequestMethodEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestMethod, v))
}

// RequestMethodNEQ applies the NEQ predicate on the "request_method" field.
func RequestMethodNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestMethod, v))
}

// RequestMethodIn applies the In predicate on the "request_method" field.
func RequestMethodIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestMethod, vs...))
}

// RequestMethodNotIn applies the NotIn predicate on the "request_method" field.
func RequestMethodNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestMethod, vs...))
}

// RequestMethodGT applies the GT predicate on the "request_method" field.
func RequestMethodGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestMethod, v))
}

// RequestMethodGTE applies the GTE predicate on the "request_method" field.
func RequestMethodGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestMethod, v))
}

// RequestMethodLT applies the LT predicate on the "request_method" field.
func RequestMethodLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestMethod, v))
}

// RequestMethodLTE applies the LTE predicate on the "request_method" field.
func RequestMethodLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestMethod, v))
}

// RequestMethodContains applies the Contains predicate on the "request_method" field.
func RequestMethodContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestMethod, v))
}

// RequestMethodHasPrefix applies the HasPrefix predicate on the "request_method" field.
func RequestMethodHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestMethod, v))
}

// RequestMethodHasSuffix applies the HasSuffix predicate on the "request_method" field.
func RequestMethodHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestMethod, v))
}

// RequestMethodIsNil applies the IsNil predicate on the "request_method" field.
func RequestMethodIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestMethod))
}

// RequestMethodNotNil applies the NotNil predicate on the "request_method" field.
func RequestMethodNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestMethod))
}

// RequestMethodEqualFold applies the EqualFold predicate on the "request_method" field.
func RequestMethodEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestMethod, v))
}

// RequestMethodContainsFold applies the ContainsFold predicate on the "request_method" field.
func RequestMethodContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestMethod, v))
}

// RequestSchemeEQ applies the EQ predicate on the "request_scheme" field.
func RequestSchemeEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestScheme, v))
}

// RequestSchemeNEQ applies the NEQ predicate on the "request_scheme" field.
func RequestSchemeNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestScheme, v))
}

// RequestSchemeIn applies the In predicate on the "request_scheme" field.
func RequestSchemeIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestScheme, vs...))
}

// RequestSchemeNotIn applies the NotIn predicate on the "request_scheme" field.
func RequestSchemeNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestScheme, vs...))
}

// RequestSchemeGT applies the GT predicate on the "request_scheme" field.
func RequestSchemeGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestScheme, v))
}

// RequestSchemeGTE applies the GTE predicate on the "request_scheme" field.
func RequestSchemeGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestScheme, v))
}

// RequestSchemeLT applies the LT predicate on the "request_scheme" field.
func RequestSchemeLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestScheme, v))
}

// RequestSchemeLTE applies the LTE predicate on the "request_scheme" field.
func RequestSchemeLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestScheme, v))
}

// RequestSchemeContains applies the Contains predicate on the "request_scheme" field.
func RequestSchemeContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestScheme, v))
}

// RequestSchemeHasPrefix applies the HasPrefix predicate on the "request_scheme" field.
func RequestSchemeHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestScheme, v))
}

// RequestSchemeHasSuffix applies the HasSuffix predicate on the "request_scheme" field.
func RequestSchemeHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestScheme, v))
}

// RequestSchemeIsNil applies the IsNil predicate on the "request_scheme" field.
func RequestSchemeIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestScheme))
}

// RequestSchemeNotNil applies the NotNil predicate on the "request_scheme" field.
func RequestSchemeNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestScheme))
}

// RequestSchemeEqualFold applies the EqualFold predicate on the "request_scheme" field.
func RequestSchemeEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestScheme, v))
}

// RequestSchemeContainsFold applies the ContainsFold predicate on the "request_scheme" field.
func RequestSchemeContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestScheme, v))
}

// RequestContentTypeEQ applies the EQ predicate on the "request_content_type" field.
func RequestContentTypeEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestContentType, v))
}

// RequestContentTypeNEQ applies the NEQ predicate on the "request_content_type" field.
func RequestContentTypeNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestContentType, v))
}

// RequestContentTypeIn applies the In predicate on the "request_content_type" field.
func RequestContentTypeIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestContentType, vs...))
}

// RequestContentTypeNotIn applies the NotIn predicate on the "request_content_type" field.
func RequestContentTypeNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestContentType, vs...))
}

// RequestContentTypeGT applies the GT predicate on the "request_content_type" field.
func RequestContentTypeGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestContentType, v))
}

// RequestContentTypeGTE applies the GTE predicate on the "request_content_type" field.
func RequestContentTypeGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestContentType, v))
}

// RequestContentTypeLT applies the LT predicate on the "request_content_type" field.
func RequestContentTypeLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestContentType, v))
}

// RequestContentTypeLTE applies the LTE predicate on the "request_content_type" field.
func RequestContentTypeLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestContentType, v))
}

// RequestContentTypeContains applies the Contains predicate on the "request_content_type" field.
func RequestContentTypeContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestContentType, v))
}

// RequestContentTypeHasPrefix applies the HasPrefix predicate on the "request_content_type" field.
func RequestContentTypeHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestContentType, v))
}

// RequestContentTypeHasSuffix applies the HasSuffix predicate on the "request_content_type" field.
func RequestContentTypeHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestContentType, v))
}

// RequestContentTypeIsNil applies the IsNil predicate on the "request_content_type" field.
func RequestContentTypeIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestContentType))
}

// RequestContentTypeNotNil applies the NotNil predicate on the "request_content_type" field.
func RequestContentTypeNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestContentType))
}

// RequestContentTypeEqualFold applies the EqualFold predicate on the "request_content_type" field.
func RequestContentTypeEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestContentType, v))
}

// RequestContentTypeContainsFold applies the ContainsFold predicate on the "request_content_type" field.
func RequestContentTypeContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestContentType, v))
}

// RequestBodyEQ applies the EQ predicate on the "request_body" field.
func RequestBodyEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestBody, v))
}

// RequestBodyNEQ applies the NEQ predicate on the "request_body" field.
func RequestBodyNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestBody, v))
}

// RequestBodyIn applies the In predicate on the "request_body" field.
func RequestBodyIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestBody, vs...))
}

// RequestBodyNotIn applies the NotIn predicate on the "request_body" field.
func RequestBodyNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestBody, vs...))
}

// RequestBodyGT applies the GT predicate on the "request_body" field.
func RequestBodyGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestBody, v))
}

// RequestBodyGTE applies the GTE predicate on the "request_body" field.
func RequestBodyGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestBody, v))
}

// RequestBodyLT applies the LT predicate on the "request_body" field.
func RequestBodyLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestBody, v))
}

// RequestBodyLTE applies the LTE predicate on the "request_body" field.
func RequestBodyLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestBody, v))
}

// RequestBodyContains applies the Contains predicate on the "request_body" field.
func RequestBodyContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestBody, v))
}

// RequestBodyHasPrefix applies the HasPrefix predicate on the "request_body" field.
func RequestBodyHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestBody, v))
}

// RequestBodyHasSuffix applies the HasSuffix predicate on the "request_body" field.
func RequestBodyHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestBody, v))
}

// RequestBodyIsNil applies the IsNil predicate on the "request_body" field.
func RequestBodyIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestBody))
}

// RequestBodyNotNil applies the NotNil predicate on the "request_body" field.
func RequestBodyNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestBody))
}

// RequestBodyEqualFold applies the EqualFold predicate on the "request_body" field.
func RequestBodyEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestBody, v))
}

// RequestBodyContainsFold applies the ContainsFold predicate on the "request_body" field.
func RequestBodyContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestBody, v))
}

// RequestClientIPEQ applies the EQ predicate on the "request_client_ip" field.
func RequestClientIPEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestClientIP, v))
}

// RequestClientIPNEQ applies the NEQ predicate on the "request_client_ip" field.
func RequestClientIPNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestClientIP, v))
}

// RequestClientIPIn applies the In predicate on the "request_client_ip" field.
func RequestClientIPIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestClientIP, vs...))
}

// RequestClientIPNotIn applies the NotIn predicate on the "request_client_ip" field.
func RequestClientIPNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestClientIP, vs...))
}

// RequestClientIPGT applies the GT predicate on the "request_client_ip" field.
func RequestClientIPGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestClientIP, v))
}

// RequestClientIPGTE applies the GTE predicate on the "request_client_ip" field.
func RequestClientIPGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestClientIP, v))
}

// RequestClientIPLT applies the LT predicate on the "request_client_ip" field.
func RequestClientIPLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestClientIP, v))
}

// RequestClientIPLTE applies the LTE predicate on the "request_client_ip" field.
func RequestClientIPLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestClientIP, v))
}

// RequestClientIPContains applies the Contains predicate on the "request_client_ip" field.
func RequestClientIPContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestClientIP, v))
}

// RequestClientIPHasPrefix applies the HasPrefix predicate on the "request_client_ip" field.
func RequestClientIPHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestClientIP, v))
}

// RequestClientIPHasSuffix applies the HasSuffix predicate on the "request_client_ip" field.
func RequestClientIPHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestClientIP, v))
}

// RequestClientIPIsNil applies the IsNil predicate on the "request_client_ip" field.
func RequestClientIPIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestClientIP))
}

// RequestClientIPNotNil applies the NotNil predicate on the "request_client_ip" field.
func RequestClientIPNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestClientIP))
}

// RequestClientIPEqualFold applies the EqualFold predicate on the "request_client_ip" field.
func RequestClientIPEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestClientIP, v))
}

// RequestClientIPContainsFold applies the ContainsFold predicate on the "request_client_ip" field.
func RequestClientIPContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestClientIP, v))
}

// RequestUserAgentEQ applies the EQ predicate on the "request_user_agent" field.
func RequestUserAgentEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestUserAgent, v))
}

// RequestUserAgentNEQ applies the NEQ predicate on the "request_user_agent" field.
func RequestUserAgentNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestUserAgent, v))
}

// RequestUserAgentIn applies the In predicate on the "request_user_agent" field.
func RequestUserAgentIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestUserAgent, vs...))
}

// RequestUserAgentNotIn applies the NotIn predicate on the "request_user_agent" field.
func RequestUserAgentNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestUserAgent, vs...))
}

// RequestUserAgentGT applies the GT predicate on the "request_user_agent" field.
func RequestUserAgentGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestUserAgent, v))
}

// RequestUserAgentGTE applies the GTE predicate on the "request_user_agent" field.
func RequestUserAgentGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestUserAgent, v))
}

// RequestUserAgentLT applies the LT predicate on the "request_user_agent" field.
func RequestUserAgentLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestUserAgent, v))
}

// RequestUserAgentLTE applies the LTE predicate on the "request_user_agent" field.
func RequestUserAgentLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestUserAgent, v))
}

// RequestUserAgentContains applies the Contains predicate on the "request_user_agent" field.
func RequestUserAgentContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestUserAgent, v))
}

// RequestUserAgentHasPrefix applies the HasPrefix predicate on the "request_user_agent" field.
func RequestUserAgentHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestUserAgent, v))
}

// RequestUserAgentHasSuffix applies the HasSuffix predicate on the "request_user_agent" field.
func RequestUserAgentHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestUserAgent, v))
}

// RequestUserAgentIsNil applies the IsNil predicate on the "request_user_agent" field.
func RequestUserAgentIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestUserAgent))
}

// RequestUserAgentNotNil applies the NotNil predicate on the "request_user_agent" field.
func RequestUserAgentNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestUserAgent))
}

// RequestUserAgentEqualFold applies the EqualFold predicate on the "request_user_agent" field.
func RequestUserAgentEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestUserAgent, v))
}

// RequestUserAgentContainsFold applies the ContainsFold predicate on the "request_user_agent" field.
func RequestUserAgentContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestUserAgent, v))
}

// RequestHeaderEQ applies the EQ predicate on the "request_header" field.
func RequestHeaderEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestHeader, v))
}

// RequestHeaderNEQ applies the NEQ predicate on the "request_header" field.
func RequestHeaderNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestHeader, v))
}

// RequestHeaderIn applies the In predicate on the "request_header" field.
func RequestHeaderIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestHeader, vs...))
}

// RequestHeaderNotIn applies the NotIn predicate on the "request_header" field.
func RequestHeaderNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestHeader, vs...))
}

// RequestHeaderGT applies the GT predicate on the "request_header" field.
func RequestHeaderGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestHeader, v))
}

// RequestHeaderGTE applies the GTE predicate on the "request_header" field.
func RequestHeaderGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestHeader, v))
}

// RequestHeaderLT applies the LT predicate on the "request_header" field.
func RequestHeaderLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestHeader, v))
}

// RequestHeaderLTE applies the LTE predicate on the "request_header" field.
func RequestHeaderLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestHeader, v))
}

// RequestHeaderContains applies the Contains predicate on the "request_header" field.
func RequestHeaderContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldRequestHeader, v))
}

// RequestHeaderHasPrefix applies the HasPrefix predicate on the "request_header" field.
func RequestHeaderHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldRequestHeader, v))
}

// RequestHeaderHasSuffix applies the HasSuffix predicate on the "request_header" field.
func RequestHeaderHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldRequestHeader, v))
}

// RequestHeaderIsNil applies the IsNil predicate on the "request_header" field.
func RequestHeaderIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestHeader))
}

// RequestHeaderNotNil applies the NotNil predicate on the "request_header" field.
func RequestHeaderNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestHeader))
}

// RequestHeaderEqualFold applies the EqualFold predicate on the "request_header" field.
func RequestHeaderEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldRequestHeader, v))
}

// RequestHeaderContainsFold applies the ContainsFold predicate on the "request_header" field.
func RequestHeaderContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldRequestHeader, v))
}

// RequestCostTimeEQ applies the EQ predicate on the "request_cost_time" field.
func RequestCostTimeEQ(v int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldRequestCostTime, v))
}

// RequestCostTimeNEQ applies the NEQ predicate on the "request_cost_time" field.
func RequestCostTimeNEQ(v int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldRequestCostTime, v))
}

// RequestCostTimeIn applies the In predicate on the "request_cost_time" field.
func RequestCostTimeIn(vs ...int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldRequestCostTime, vs...))
}

// RequestCostTimeNotIn applies the NotIn predicate on the "request_cost_time" field.
func RequestCostTimeNotIn(vs ...int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldRequestCostTime, vs...))
}

// RequestCostTimeGT applies the GT predicate on the "request_cost_time" field.
func RequestCostTimeGT(v int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldRequestCostTime, v))
}

// RequestCostTimeGTE applies the GTE predicate on the "request_cost_time" field.
func RequestCostTimeGTE(v int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldRequestCostTime, v))
}

// RequestCostTimeLT applies the LT predicate on the "request_cost_time" field.
func RequestCostTimeLT(v int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldRequestCostTime, v))
}

// RequestCostTimeLTE applies the LTE predicate on the "request_cost_time" field.
func RequestCostTimeLTE(v int64) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldRequestCostTime, v))
}

// RequestCostTimeIsNil applies the IsNil predicate on the "request_cost_time" field.
func RequestCostTimeIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldRequestCostTime))
}

// RequestCostTimeNotNil applies the NotNil predicate on the "request_cost_time" field.
func RequestCostTimeNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldRequestCostTime))
}

// ResponseTimeEQ applies the EQ predicate on the "response_time" field.
func ResponseTimeEQ(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseTime, v))
}

// ResponseTimeNEQ applies the NEQ predicate on the "response_time" field.
func ResponseTimeNEQ(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldResponseTime, v))
}

// ResponseTimeIn applies the In predicate on the "response_time" field.
func ResponseTimeIn(vs ...time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldResponseTime, vs...))
}

// ResponseTimeNotIn applies the NotIn predicate on the "response_time" field.
func ResponseTimeNotIn(vs ...time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldResponseTime, vs...))
}

// ResponseTimeGT applies the GT predicate on the "response_time" field.
func ResponseTimeGT(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldResponseTime, v))
}

// ResponseTimeGTE applies the GTE predicate on the "response_time" field.
func ResponseTimeGTE(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldResponseTime, v))
}

// ResponseTimeLT applies the LT predicate on the "response_time" field.
func ResponseTimeLT(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldResponseTime, v))
}

// ResponseTimeLTE applies the LTE predicate on the "response_time" field.
func ResponseTimeLTE(v time.Time) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldResponseTime, v))
}

// ResponseTimeIsNil applies the IsNil predicate on the "response_time" field.
func ResponseTimeIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldResponseTime))
}

// ResponseTimeNotNil applies the NotNil predicate on the "response_time" field.
func ResponseTimeNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldResponseTime))
}

// ResponseHeaderEQ applies the EQ predicate on the "response_header" field.
func ResponseHeaderEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseHeader, v))
}

// ResponseHeaderNEQ applies the NEQ predicate on the "response_header" field.
func ResponseHeaderNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldResponseHeader, v))
}

// ResponseHeaderIn applies the In predicate on the "response_header" field.
func ResponseHeaderIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldResponseHeader, vs...))
}

// ResponseHeaderNotIn applies the NotIn predicate on the "response_header" field.
func ResponseHeaderNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldResponseHeader, vs...))
}

// ResponseHeaderGT applies the GT predicate on the "response_header" field.
func ResponseHeaderGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldResponseHeader, v))
}

// ResponseHeaderGTE applies the GTE predicate on the "response_header" field.
func ResponseHeaderGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldResponseHeader, v))
}

// ResponseHeaderLT applies the LT predicate on the "response_header" field.
func ResponseHeaderLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldResponseHeader, v))
}

// ResponseHeaderLTE applies the LTE predicate on the "response_header" field.
func ResponseHeaderLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldResponseHeader, v))
}

// ResponseHeaderContains applies the Contains predicate on the "response_header" field.
func ResponseHeaderContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldResponseHeader, v))
}

// ResponseHeaderHasPrefix applies the HasPrefix predicate on the "response_header" field.
func ResponseHeaderHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldResponseHeader, v))
}

// ResponseHeaderHasSuffix applies the HasSuffix predicate on the "response_header" field.
func ResponseHeaderHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldResponseHeader, v))
}

// ResponseHeaderIsNil applies the IsNil predicate on the "response_header" field.
func ResponseHeaderIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldResponseHeader))
}

// ResponseHeaderNotNil applies the NotNil predicate on the "response_header" field.
func ResponseHeaderNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldResponseHeader))
}

// ResponseHeaderEqualFold applies the EqualFold predicate on the "response_header" field.
func ResponseHeaderEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldResponseHeader, v))
}

// ResponseHeaderContainsFold applies the ContainsFold predicate on the "response_header" field.
func ResponseHeaderContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldResponseHeader, v))
}

// ResponseStatusCodeEQ applies the EQ predicate on the "response_status_code" field.
func ResponseStatusCodeEQ(v int) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseStatusCode, v))
}

// ResponseStatusCodeNEQ applies the NEQ predicate on the "response_status_code" field.
func ResponseStatusCodeNEQ(v int) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldResponseStatusCode, v))
}

// ResponseStatusCodeIn applies the In predicate on the "response_status_code" field.
func ResponseStatusCodeIn(vs ...int) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldResponseStatusCode, vs...))
}

// ResponseStatusCodeNotIn applies the NotIn predicate on the "response_status_code" field.
func ResponseStatusCodeNotIn(vs ...int) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldResponseStatusCode, vs...))
}

// ResponseStatusCodeGT applies the GT predicate on the "response_status_code" field.
func ResponseStatusCodeGT(v int) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldResponseStatusCode, v))
}

// ResponseStatusCodeGTE applies the GTE predicate on the "response_status_code" field.
func ResponseStatusCodeGTE(v int) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldResponseStatusCode, v))
}

// ResponseStatusCodeLT applies the LT predicate on the "response_status_code" field.
func ResponseStatusCodeLT(v int) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldResponseStatusCode, v))
}

// ResponseStatusCodeLTE applies the LTE predicate on the "response_status_code" field.
func ResponseStatusCodeLTE(v int) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldResponseStatusCode, v))
}

// ResponseStatusCodeIsNil applies the IsNil predicate on the "response_status_code" field.
func ResponseStatusCodeIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldResponseStatusCode))
}

// ResponseStatusCodeNotNil applies the NotNil predicate on the "response_status_code" field.
func ResponseStatusCodeNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldResponseStatusCode))
}

// ResponseDataEQ applies the EQ predicate on the "response_data" field.
func ResponseDataEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldResponseData, v))
}

// ResponseDataNEQ applies the NEQ predicate on the "response_data" field.
func ResponseDataNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldResponseData, v))
}

// ResponseDataIn applies the In predicate on the "response_data" field.
func ResponseDataIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldResponseData, vs...))
}

// ResponseDataNotIn applies the NotIn predicate on the "response_data" field.
func ResponseDataNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldResponseData, vs...))
}

// ResponseDataGT applies the GT predicate on the "response_data" field.
func ResponseDataGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldResponseData, v))
}

// ResponseDataGTE applies the GTE predicate on the "response_data" field.
func ResponseDataGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldResponseData, v))
}

// ResponseDataLT applies the LT predicate on the "response_data" field.
func ResponseDataLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldResponseData, v))
}

// ResponseDataLTE applies the LTE predicate on the "response_data" field.
func ResponseDataLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldResponseData, v))
}

// ResponseDataContains applies the Contains predicate on the "response_data" field.
func ResponseDataContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldResponseData, v))
}

// ResponseDataHasPrefix applies the HasPrefix predicate on the "response_data" field.
func ResponseDataHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldResponseData, v))
}

// ResponseDataHasSuffix applies the HasSuffix predicate on the "response_data" field.
func ResponseDataHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldResponseData, v))
}

// ResponseDataIsNil applies the IsNil predicate on the "response_data" field.
func ResponseDataIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldResponseData))
}

// ResponseDataNotNil applies the NotNil predicate on the "response_data" field.
func ResponseDataNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldResponseData))
}

// ResponseDataEqualFold applies the EqualFold predicate on the "response_data" field.
func ResponseDataEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldResponseData, v))
}

// ResponseDataContainsFold applies the ContainsFold predicate on the "response_data" field.
func ResponseDataContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldResponseData, v))
}

// GoVersionEQ applies the EQ predicate on the "go_version" field.
func GoVersionEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldGoVersion, v))
}

// GoVersionNEQ applies the NEQ predicate on the "go_version" field.
func GoVersionNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldGoVersion, v))
}

// GoVersionIn applies the In predicate on the "go_version" field.
func GoVersionIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldGoVersion, vs...))
}

// GoVersionNotIn applies the NotIn predicate on the "go_version" field.
func GoVersionNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldGoVersion, vs...))
}

// GoVersionGT applies the GT predicate on the "go_version" field.
func GoVersionGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldGoVersion, v))
}

// GoVersionGTE applies the GTE predicate on the "go_version" field.
func GoVersionGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldGoVersion, v))
}

// GoVersionLT applies the LT predicate on the "go_version" field.
func GoVersionLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldGoVersion, v))
}

// GoVersionLTE applies the LTE predicate on the "go_version" field.
func GoVersionLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldGoVersion, v))
}

// GoVersionContains applies the Contains predicate on the "go_version" field.
func GoVersionContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldGoVersion, v))
}

// GoVersionHasPrefix applies the HasPrefix predicate on the "go_version" field.
func GoVersionHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldGoVersion, v))
}

// GoVersionHasSuffix applies the HasSuffix predicate on the "go_version" field.
func GoVersionHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldGoVersion, v))
}

// GoVersionIsNil applies the IsNil predicate on the "go_version" field.
func GoVersionIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldGoVersion))
}

// GoVersionNotNil applies the NotNil predicate on the "go_version" field.
func GoVersionNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldGoVersion))
}

// GoVersionEqualFold applies the EqualFold predicate on the "go_version" field.
func GoVersionEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldGoVersion, v))
}

// GoVersionContainsFold applies the ContainsFold predicate on the "go_version" field.
func GoVersionContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldGoVersion, v))
}

// SdkVersionEQ applies the EQ predicate on the "sdk_version" field.
func SdkVersionEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldSdkVersion, v))
}

// SdkVersionNEQ applies the NEQ predicate on the "sdk_version" field.
func SdkVersionNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldSdkVersion, v))
}

// SdkVersionIn applies the In predicate on the "sdk_version" field.
func SdkVersionIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldSdkVersion, vs...))
}

// SdkVersionNotIn applies the NotIn predicate on the "sdk_version" field.
func SdkVersionNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldSdkVersion, vs...))
}

// SdkVersionGT applies the GT predicate on the "sdk_version" field.
func SdkVersionGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldSdkVersion, v))
}

// SdkVersionGTE applies the GTE predicate on the "sdk_version" field.
func SdkVersionGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldSdkVersion, v))
}

// SdkVersionLT applies the LT predicate on the "sdk_version" field.
func SdkVersionLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldSdkVersion, v))
}

// SdkVersionLTE applies the LTE predicate on the "sdk_version" field.
func SdkVersionLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldSdkVersion, v))
}

// SdkVersionContains applies the Contains predicate on the "sdk_version" field.
func SdkVersionContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldSdkVersion, v))
}

// SdkVersionHasPrefix applies the HasPrefix predicate on the "sdk_version" field.
func SdkVersionHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldSdkVersion, v))
}

// SdkVersionHasSuffix applies the HasSuffix predicate on the "sdk_version" field.
func SdkVersionHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldSdkVersion, v))
}

// SdkVersionIsNil applies the IsNil predicate on the "sdk_version" field.
func SdkVersionIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldSdkVersion))
}

// SdkVersionNotNil applies the NotNil predicate on the "sdk_version" field.
func SdkVersionNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldSdkVersion))
}

// SdkVersionEqualFold applies the EqualFold predicate on the "sdk_version" field.
func SdkVersionEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldSdkVersion, v))
}

// SdkVersionContainsFold applies the ContainsFold predicate on the "sdk_version" field.
func SdkVersionContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldSdkVersion, v))
}

// SystemInfoEQ applies the EQ predicate on the "system_info" field.
func SystemInfoEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEQ(FieldSystemInfo, v))
}

// SystemInfoNEQ applies the NEQ predicate on the "system_info" field.
func SystemInfoNEQ(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNEQ(FieldSystemInfo, v))
}

// SystemInfoIn applies the In predicate on the "system_info" field.
func SystemInfoIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldIn(FieldSystemInfo, vs...))
}

// SystemInfoNotIn applies the NotIn predicate on the "system_info" field.
func SystemInfoNotIn(vs ...string) predicate.GinLog {
	return predicate.GinLog(sql.FieldNotIn(FieldSystemInfo, vs...))
}

// SystemInfoGT applies the GT predicate on the "system_info" field.
func SystemInfoGT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGT(FieldSystemInfo, v))
}

// SystemInfoGTE applies the GTE predicate on the "system_info" field.
func SystemInfoGTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldGTE(FieldSystemInfo, v))
}

// SystemInfoLT applies the LT predicate on the "system_info" field.
func SystemInfoLT(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLT(FieldSystemInfo, v))
}

// SystemInfoLTE applies the LTE predicate on the "system_info" field.
func SystemInfoLTE(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldLTE(FieldSystemInfo, v))
}

// SystemInfoContains applies the Contains predicate on the "system_info" field.
func SystemInfoContains(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContains(FieldSystemInfo, v))
}

// SystemInfoHasPrefix applies the HasPrefix predicate on the "system_info" field.
func SystemInfoHasPrefix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasPrefix(FieldSystemInfo, v))
}

// SystemInfoHasSuffix applies the HasSuffix predicate on the "system_info" field.
func SystemInfoHasSuffix(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldHasSuffix(FieldSystemInfo, v))
}

// SystemInfoIsNil applies the IsNil predicate on the "system_info" field.
func SystemInfoIsNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldIsNull(FieldSystemInfo))
}

// SystemInfoNotNil applies the NotNil predicate on the "system_info" field.
func SystemInfoNotNil() predicate.GinLog {
	return predicate.GinLog(sql.FieldNotNull(FieldSystemInfo))
}

// SystemInfoEqualFold applies the EqualFold predicate on the "system_info" field.
func SystemInfoEqualFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldEqualFold(FieldSystemInfo, v))
}

// SystemInfoContainsFold applies the ContainsFold predicate on the "system_info" field.
func SystemInfoContainsFold(v string) predicate.GinLog {
	return predicate.GinLog(sql.FieldContainsFold(FieldSystemInfo, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.GinLog) predicate.GinLog {
	return predicate.GinLog(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.GinLog) predicate.GinLog {
	return predicate.GinLog(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.GinLog) predicate.GinLog {
	return predicate.GinLog(sql.NotPredicates(p))
}
